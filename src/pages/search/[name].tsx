import Head from 'next/head';
import MatchList from '@/components/matchList';
import Profile from '@/components/profile';
import { IMatchData, IProfileData, searchMatchDetail, searchMatchIds, searchProfile } from '@/lib/search';
import { ReactElement } from 'react';
import Layout from '@/components/layout';

interface ISummonerProps {
  profileData: IProfileData,
  matchesData: IMatchData[]
}

interface ISummonerName {
    params: {name: string};
}

export async function getServerSideProps({ params }: ISummonerName) {
  const profileData: IProfileData | null = await searchProfile(params.name);

  if (profileData === null) {
    return {
      props: {
        profileData: null,
        matchesData: null
      }
    }
  }

  const matchIdsData: string[] | null = await searchMatchIds(profileData.puuid, 0, 10);

  if (matchIdsData === null) {
    return {
      props: {
        profileData: profileData,
        matchesData: null
      }
    }
  }

  const matchesData: (IMatchData | null)[] = await Promise.all(
    matchIdsData.map(
      async (matchId) => searchMatchDetail(matchId, params.name)
    )
  );

  return {
    props: {
      profileData: profileData,
      matchesData: matchesData
    }
  }
}

export default function Summoner(props: ISummonerProps) {

  const title = props.profileData ? `${props.profileData.name} - Search Summoner` : "Summoner Not Found";

  return (
    <>
      <Head>
        <title>{title}</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      {props.profileData && <Profile data={props.profileData}/>}
      {props.matchesData && <MatchList data={props.matchesData}/>}
    </>
  )
}

Summoner.getLayout = function getLayout(page: ReactElement) {

  return (
    <Layout>
      {page}
    </Layout>
  )
}